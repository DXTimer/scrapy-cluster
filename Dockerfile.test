# ------------------------------------------------------------------------------
# Baseline python image
# ------------------------------------------------------------------------------
FROM python:2.7 AS base
LABEL MAINTAINER="Ivan Bakalov <ibbakalov@gmail.com>"

# os setup
RUN apt-get update && apt-get -y install \
  python-lxml \
  build-essential \
  libssl-dev \
  libffi-dev \
  python-dev \
  libxml2-dev \
  libxslt1-dev \
  libbz2-dev \
  && rm -rf /var/lib/apt/lists/*

ENV APP_HOME /usr/src/app
RUN mkdir -p ${APP_HOME}
WORKDIR ${APP_HOME}

RUN apt-get update && apt-get upgrade -y openssl

RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

# set up environment variables
ENV POETRY_HOME="/root/.poetry"
ENV POETRY_NO_INTERACTION=1
ENV POETRY_VIRTUALENVS_IN_PROJECT=true

ENV VENV_PATH="${APP_HOME}/.venv"
ENV PATH="$POETRY_HOME/bin:$VENV_PATH/bin:$PATH"

# ------------------------------------------------------------------------------
# Project dependencies image
# ------------------------------------------------------------------------------
FROM base as deps
WORKDIR ${APP_HOME}

COPY poetry.lock pyproject.toml ./
RUN poetry install

# ------------------------------------------------------------------------------
# Test runner image for use in docker-compose context
# ------------------------------------------------------------------------------
FROM deps as tests
WORKDIR ${APP_HOME}
# copy in our built poetry + venv
COPY --from=deps $POETRY_HOME $POETRY_HOME
COPY --from=deps $APP_HOME $APP_HOME

# move codebase over
COPY . ${APP_HOME}

COPY rest/config/docker/settings.py ${APP_HOME}/rest/
COPY redis-monitor/config/docker/settings.py ${APP_HOME}/redis-monitor/
COPY kafka-monitor/config/docker/settings.py ${APP_HOME}/kafka-monitor/
COPY crawler/config/docker/settings.py ${APP_HOME}/crawler/crawling

CMD ["./scripts/run_online_tests.sh"]